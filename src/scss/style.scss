@use "sass:math";

// Подключение миксинов ================================================================
@import "base/mixins";

// Подключение шрифтов =================================================================
// добавить флаг &display=swap при подключении через google fonts
// @import url(https://fonts.googleapis.com/css?family=Montserrat:500,600,700&display=swap);

// Подключение локальных шрифтов
@import "fonts/fonts";

// Подключение иконочных шрифтов========================================================
// Подключить если есть файл иконочного шрифта

$fontFamily: "Manrope", sans-serif;

// @supports (font-variation-settings: normal) {
//   $fontFamily: "RobotoFlex-VF", sans-serif;
// }


// Шрифт по умолчанию

$fontSize: 20px; // где 14px - размер шрифта по умолчанию из макета

// Основные цвета
$mainColor: #333333; // Цвет шрифта по умолчанию
$bgColor: #ffffff; // Цвет фона
$bgColor-2: #EFEEEE;
$highlightColor: #95C11F; // Цвет акцентов
$highlightColor-2: #814997;
// $decorColor: #849496; // Цвет деталей
// $decorColor2: #96B2BA;
// $addColor: #e8e8e8;
// $addColorGreen: #f5faf9;
$textColor: #4F4F4F;

// Настройки ===========================================================================
// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 100%;
// Ширина ограничивающего контайнера (0 = нет ограничения)
$maxWidthContainer: 1180;
// Общий отступ у контейнера
// 30 = по 15px слева и справа, 0 = нет отступа
$containerPadding: 40;
// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейк-поинтов)
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;
// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;
// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбука, некоторые планшеты в гор. положении
$tablet: em(1024.98); // Планшеты, некоторые телефоны в гор.положении
$mobile: em(768.98); // Телефоны L 
$mobileSmall: em(576.98); // Телефоны S 

// Обнуление и общие параметры
@import "base/null";

@import "base/spollers";
// @import "base/forms/checkbox";
// @import "base/forms/radio";
@import "base/popup";

// кастомный скроллбар

*::-webkit-scrollbar {
	width: 8px;
	height: 8px;
	transition: 0.3s all ease;
	cursor: grab;
}

*::-webkit-scrollbar-track {
	background: $bgColor;
	/* цвет дорожки */
}

*::-webkit-scrollbar-thumb {
	background-color: $mainColor;
	/* цвет плашки */
	border-radius: 20px;
	/* закругления плашки */
	border: 1px solid $bgColor;
}

*::-webkit-scrollbar:horizontal {
	height: 10px;
	width: 8px;
	// display: none;
}

// *::-webkit-scrollbar-thumb:horizontal {
// 	display: none;
// }

* {
	scroll-behavior: smooth;
}

body {

	// Скролл заблокирован
	.lock & {
		overflow: hidden;
		touch-action: none;
		padding-right: 0 !important;
	}

	// Сайт загружен
	.loaded & {}

	._menu-active & {
		overflow: hidden;
		touch-action: none;
	}
}

// Оболочка ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
	position: relative;
	// max-height: 100vh;
	min-height: 100%;
	max-width: $maxWidth;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	margin: 0 auto;

	// Прижимаем footer
	>main {
		flex: 1 1 auto;
		// overflow: auto;
	}

	// Фикс для слайдеров
	>* {
		min-width: 0;
	}

	&._sticky {
		overflow: unset;
	}
}

// Ограничения контейнера ================================================

// (i) Стили будут применяться ко 
// всем классамм содержащим *__container
// Например, header__container, main__container
// Снипет (HTML): cnt

@if ($responsiveType ==1) {

	// Отзывчивая
	[class*="__container"] {
		@if ($maxWidthContainer > 0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
			margin: 0 auto;
		}

		@if ($containerPadding > 0) {
			padding: 0 rem(math.div($containerPadding, 2));
		}
	}
}

@else {

	// По брейк-поинтам
	[class*="__container"] {
		margin: 0 auto;

		@if ($maxWidthContainer > 0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
		}

		@else {
			@if ($containerPadding > 0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}

		@media (max-width: $pc) {
			max-width: rem(970);
		}

		@media (max-width: $tablet) {
			max-width: rem(750);
		}

		@media (max-width: $mobile) {
			max-width: none;

			@if ($containerPadding > 0 and $maxWidthContainer > 0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
	}
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base";

// Подключение стилей общих элементов проекта
@import "common";

// Подключение стилей отдельных блоков
@import "hero";
@import "header";
@import "services";
@import "licenses";
@import "recognition";
@import "partners";
@import "projects";
@import "feedback";
@import "consultation";
@import "breadcrumbs";
@import "pages/hero";
@import "offer";
@import "recomendation";
@import "pages/types";
@import "pages/why";
@import "pages/delivery";
@import "pages/registry";
@import "pages/why-us";
@import "pages/capabilities";
@import "pages/about";
@import "pages/expertise";
@import "pages/articles";
@import "pages/calculator";
@import "pages/components";
@import "pages/our-way";
@import "pages/why-we";
@import "pages/vendor";
@import "pages/certificates";
@import "pages/projects";
@import "pages/recomendation";
@import "pages/contacts";
@import "pages/map";
@import "footer";
@import "base/swiper";

// Подключение стилей отдельных страниц
// @import "animation";

// @import "libs/tippy"; 
// @import "base/tabs";